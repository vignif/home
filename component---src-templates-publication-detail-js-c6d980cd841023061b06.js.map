{"version":3,"file":"component---src-templates-publication-detail-js-c6d980cd841023061b06.js","mappings":"2NAuGA,UA9F0B,IAA4B,IAA3B,KAAEA,EAAI,YAAEC,GAAa,EAE9C,MAAMC,EAAMF,EAAKG,YAEjB,IAAIC,EAAO,GACPC,EAAO,GACPJ,EAAYK,WACdD,EAAOJ,EAAYK,SAASC,MAE1BN,EAAYG,OACdA,EAAOH,EAAYG,KAAKG,MAI1B,MAAM,MAAEC,EAAK,KAAED,EAAI,MAAEE,EAAK,KAAEC,EAAI,IAAEC,EAAG,SAAEC,GAAaV,EAC9CW,EAAUX,EAAIW,QACdC,GAAMC,EAAAA,EAAAA,GAASb,EAAIY,KACnBE,EAASd,EAAIc,OACbC,EAAOf,EAAIe,KAEjB,OADAC,QAAQC,IAAIF,GAEV,gBAAC,IAAM,KACL,2BAASG,UAAU,4CACjB,uBAAKA,UAAU,eACb,uBAAKA,UAAU,oBACb,sBAAIA,UAAU,YAAYZ,GAExBK,EAAQQ,KAAI,CAACC,EAAQC,IACnB,uBAAKC,IAAKF,EAAOf,KAAMa,UAAU,gBAC9BG,EAAQ,GAAKA,EAAQrB,EAAIW,QAAQY,OAAS,GAAK,KAC/CF,EAAQ,GAAKA,IAAUrB,EAAIW,QAAQY,OAAS,GAAK,QAClD,qBAAGL,UAAU,gBAAgBE,EAAOI,KAAK,IAAEJ,EAAOK,cAK5D,uBAAKP,UAAU,OACb,uBAAKA,UAAU,aACb,sBAAIA,UAAU,UAAU,eAAa,WAGzC,uBAAKA,UAAU,+BAEb,wBAAMA,UAAU,aACd,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,EAAAQ,EAAW,CACVC,MAAOf,EACPgB,IAAKvB,EACLa,UAAU,aAId,uBAAKA,UAAU,YACb,uBAAKA,UAAU,QACb,yBAAG,UAAQX,GACX,yBAAG,SAAOC,GACV,yBAAG,SAAM,qBAAGqB,KAAMpB,EAAKqB,OAAO,SAASC,IAAI,cAAczB,IACxC,WAAhBQ,EAAOU,KAAoB,KAAO,yBAAG,oBAAiB,qBAAGK,KAAMf,EAAOkB,UAAWF,OAAO,SAASC,IAAI,aAAab,UAAU,mBAAkB,OAAI,gBAAC,MAAiB,QACrK,yBAAG,QAECH,EAAKI,KAAI,CAACc,EAAKZ,IACb,uBAAKC,IAAKW,EAAKf,UAAU,yBACvB,gBAAC,EAAAgB,KAAI,CAACC,GAAE,SAAWF,EAAOf,UAAU,+BAA+Be,QAK7E,uBAAKf,UAAU,aACb,qBAAGA,UAAU,mBAAkB,YAE/B,uBAAKA,UAAU,UAAUkB,wBAAyB,CAAEC,OAAQ3B,QAKlE,uBAAKQ,UAAU,YACb,uBAAKA,UAAU,qBACZf,GAAQ,gBAAC,EAAA+B,KAAI,CAACC,GAAE,iBAAmBhC,EAAQe,UAAU,2BAA0B,gBAAC,MAAwB,MAAG,cAE9G,uBAAKA,UAAU,mBACZhB,GAAQ,gBAAC,EAAAgC,KAAI,CAACC,GAAE,iBAAmBjC,EAAQgB,UAAU,2BAA0B,gBAAC,MAAyB,MAAG,eAOlH,EAON,MAAMoB,EAAO,QAAC,KAAExC,GAAM,SAC3B,gBAAC,IAAG,CAACQ,MAAOR,EAAKG,YAAYK,MAAOiC,YAAazC,EAAKG,YAAYS,UAAY,C","sources":["webpack://@vignif/home/./src/templates/publication-detail.js"],"sourcesContent":["import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { graphql } from 'gatsby'\nimport { Link } from \"gatsby\"\nimport { HiOutlineArrowCircleRight, HiOutlineArrowCircleLeft, HiOutlineDownload} from \"react-icons/hi\"\nimport { Seo } from \"../components/seo\"\n\n\nconst PublicationDetail = ({ data, pageContext }) => {\n  // console.log(data)\n  const pub = data.publication\n  // console.log(pageContext)\n  var next = \"\"\n  var prev = \"\"\n  if (pageContext.previous) {\n    prev = pageContext.previous.slug\n  }\n  if (pageContext.next) {\n    next = pageContext.next.slug\n  }\n  // console.log(\"prev\", prev)\n  // console.log(\"next\", next)\n  const { title, slug, venue, date, url, abstract } = pub\n  const authors = pub.authors\n  const img = getImage(pub.img)\n  const attach = pub.attach\n  const tags = pub.tags\n  console.log(tags)\n  return (\n    <Layout>\n      <section className=\"py-5 text-center container own_container\">\n        <div className=\"row py-lg-5\">\n          <div className=\"col-md-8 mx-auto\">\n            <h1 className=\"fw-light\">{title}</h1>\n            {\n              authors.map((author, index) => (\n                <div key={author.slug} className=\"authors_list\">\n                  {index > 0 && index < pub.authors.length - 1 && \", \"}\n                  {index > 0 && index === pub.authors.length - 1 && \" and \"}\n                  <p className=\"authors_list\">{author.name} {author.surname}</p>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <hr className=\"hr-text\" data-content=\"Info\" />\n          </div>\n        </div>\n        <div className=\"container own_sub_container\">\n\n          <main className=\"spotlight\">\n            <div className=\"container my-5\">\n              <div className=\"row\">\n                <div className=\"col-lg-3\">\n                  <GatsbyImage\n                    image={img}\n                    alt={slug}\n                    className=\"pub_pic\"\n                  />\n\n                </div>\n                <div className=\"col-lg-8\">\n                  <div className=\"p-15\">\n                    <p>Venue: {venue}</p>\n                    <p>Date: {date}</p>\n                    <p>Link: <a href={url} target=\"_blank\" rel=\"noreferrer\">{title}</a></p>\n                    {attach.name === \"nofile\" ? null : <p>Additional Info: <a href={attach.publicURL} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary\">Get <HiOutlineDownload/></a></p>}\n                    <p>Tags:\n                      {\n                        tags.map((tag, index) => (\n                          <div key={tag} className=\"authors_list fw-light\">\n                            <Link to={`/tags/${tag}`} className=\"btn btn-outline-primary m-2\">{tag}</Link>\n                          </div>\n                        ))}\n                    </p>\n                  </div>\n                  <div className=\"p-15 mt-4\">\n                    <p className=\"lead text-muted\">Abstract</p>\n\n                    <div className=\"justify\" dangerouslySetInnerHTML={{ __html: abstract }} />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-5\">\n                <div className=\"col text-lg-start\">\n                  {prev && <Link to={`/publications/${prev}`} className=\"btn btn-outline-primary\"><HiOutlineArrowCircleLeft />&nbsp;Previous</Link>}\n                </div>\n                <div className=\"col text-lg-end\">\n                  {next && <Link to={`/publications/${next}`} className=\"btn btn-outline-primary\"><HiOutlineArrowCircleRight />&nbsp;Next</Link>}\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\n// Step 3: Export your component\nexport default PublicationDetail\n\nexport const Head = ({ data }) => (\n  <Seo title={data.publication.title} description={data.publication.abstract} />\n)\n\n\nexport const query = graphql`\nquery CreatePublicationPage($slug: String) {\n  publication: publicationsJson(slug: {eq: $slug}) {\n    title\n    slug\n    venue\n    tags\n    url\n    abstract\n    authors {\n      slug\n      name\n      surname\n    }\n    attach {\n      base\n      name\n      publicURL\n    }\n    date(formatString: \"MMMM DD, YYYY\")\n    img {\n      childImageSharp {\n        gatsbyImageData(width: 400, placeholder: BLURRED, quality: 90, formats: [AUTO, WEBP, AVIF])\n      }\n    }\n  }\n}`\n"],"names":["data","pageContext","pub","publication","next","prev","previous","slug","title","venue","date","url","abstract","authors","img","getImage","attach","tags","console","log","className","map","author","index","key","length","name","surname","G","image","alt","href","target","rel","publicURL","tag","Link","to","dangerouslySetInnerHTML","__html","Head","description"],"sourceRoot":""}