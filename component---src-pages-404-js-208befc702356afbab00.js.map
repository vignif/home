{"version":3,"file":"component---src-pages-404-js-208befc702356afbab00.js","mappings":"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","sources":["webpack://@vignif/home/./src/components/navbar.js","webpack://@vignif/home/./src/components/layout.js","webpack://@vignif/home/./src/components/seo.js","webpack://@vignif/home/./src/hooks/use-site-metadata.js","webpack://@vignif/home/./src/pages/404.js","webpack://@vignif/home/./data/videos/map.mp4"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst isActive = ({ isCurrent }) => {\n  return isCurrent ? { className: \"nav-link active\" } : { className: \"nav-link\" }\n}\n\nconst ExactNavLink = props => (\n  <Link getProps={isActive} {...props} />\n)\n\nconst Navbar = ({ siteTitle }) => {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-primary container\">\n      <div className=\"container-fluid\">\n        <Link to=\"/\" className=\"navbar-brand\" href=\"#\">{siteTitle}</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#main-navbar\"\n          aria-controls=\"main-navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\n          <ul className=\"navbar-nav ms-auto mb-2 mb-md-0\">\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/\">Home</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/blog\">Blog</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/publications\">Publications</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/news\">News</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/about\">About</ExactNavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Navbar\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Navbar from \"./navbar\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  var year = new Date().getFullYear();\n  return (\n    <div className=\"container-fluid p-0\">\n      <Navbar siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>\n        {children}\n      </main>\n      <footer className=\"footer mt-auto py-3\">\n        <div className=\"container\">\n          <span className=\"text-muted\"> &#169; Francesco Vigni {year} </span>\n          </div>\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\nexport const Seo = ({ title, description, pathname, children }) => {\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>ðŸ‘¤</text></svg>\" />\n      {children}\n    </>\n  )\n}","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n            title\n            description\n            author\n            keywords\n            image\n            siteUrl\n            twitterUsername\n            social{\n              twitter\n              github\n              linkedin\n              google\n            }\n          }\n      }\n    }\n  `)\n\n    return data.site.siteMetadata\n}","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { Seo } from \"../components/seo\"\n\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithub, faTwitter, faGoogle } from '@fortawesome/free-brands-svg-icons'\nimport { TbTie, TbHome } from 'react-icons/tb';\n\n\nimport mapVideo from \"../../data/videos/map.mp4\"\n\nconst Page404 = () => {\n  const { social } = useSiteMetadata()\n\n  return (\n\n    <Layout>\n      <section className=\"py-5 text-center container own_container\">\n        <div className=\"row py-lg-5\">\n          <div className=\"col-lg-6 col-md-8 mx-auto\">\n            <h1 className=\"fw-light\">You got lost my friend!</h1>\n            <p className=\"lead text-muted\">404: Page not Found</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <hr className=\"hr-text\" data-content=\"\" />\n          </div>\n        </div>\n\n        <div className=\"container my-2 own_sub_container\">\n\n          <div className=\"container\">\n            <div className=\"row justify-content-center \">\n              <div className=\"col-md-6 text-center\">\n                <p>I guess you didn't find what you were looking for!</p>\n                <div>\n                <iframe src=\"https://giphy.com/embed/26n6WywJyh39n1pBu\" allowFullScreen></iframe>\n\n                <p className=\"\">Maybe the <Link to=\"/\">home page</Link> would help you!</p>\n\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <hr className=\"hr-text\" data-content=\"Socials\" />\n          </div>\n        </div>\n        {/* SOCIAL ICONS */}\n        <div className=\"row justify-content-center\">\n          <div className=\"col-1 mx-1\">\n            <a href={social.google} target=\"_blank\" rel=\"noreferrer\" className=\"\">\n              <FontAwesomeIcon icon={faGoogle} size=\"2x\" />\n            </a>\n          </div>\n          <div className=\"col-1 mx-1\">\n            <a href={social.github} target=\"_blank\" rel=\"noreferrer\" className=\"\">\n              <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n            </a>\n          </div>\n          <div className=\"col-1 mx-1\">\n            <a href={social.twitter} target=\"_blank\" rel=\"noreferrer\" className=\"\">\n              <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n            </a>\n          </div>\n          <div className=\"col-1 mx-1\">\n            <a href={social.linkedin} target=\"_blank\" rel=\"noreferrer\" className=\"\">\n              <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n            </a>\n          </div>\n        </div>\n      </section>\n\n    </Layout >\n  )\n}\n\nexport default Page404\n\nexport const Head = () => (\n  <Seo title=\"You got lost\" />\n)","export default __webpack_public_path__ + \"static/map-a958bbe6230548625eeba270766b0641.mp4\";"],"names":["isActive","_ref","isCurrent","className","ExactNavLink","props","React","Link","Object","assign","getProps","Navbar","_ref2","siteTitle","to","href","type","id","defaultProps","_data$site$siteMetada","children","data","useStaticQuery","year","Date","getFullYear","site","siteMetadata","title","Seo","description","pathname","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","useSiteMetadata","seo","url","name","content","rel","Page404","social","Layout","src","allowFullScreen","google","target","FontAwesomeIcon","icon","faGoogle","size","github","faGithub","twitter","faTwitter","linkedin","faLinkedin","Head"],"sourceRoot":""}