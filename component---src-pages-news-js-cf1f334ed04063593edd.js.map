{"version":3,"file":"component---src-pages-news-js-cf1f334ed04063593edd.js","mappings":"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","sources":["webpack://@vignif/home/./src/components/navbar.js","webpack://@vignif/home/./src/components/layout.js","webpack://@vignif/home/./src/components/seo.js","webpack://@vignif/home/./src/hooks/use-site-metadata.js","webpack://@vignif/home/./src/pages/news.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst isActive = ({ isCurrent }) => {\n  return isCurrent ? { className: \"nav-link active\" } : { className: \"nav-link\" }\n}\n\nconst ExactNavLink = props => (\n  <Link getProps={isActive} {...props} />\n)\n\nconst Navbar = ({ siteTitle }) => {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-primary container\">\n      <div className=\"container-fluid\">\n        <Link to=\"/\" className=\"navbar-brand\" href=\"#\">{siteTitle}</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#main-navbar\"\n          aria-controls=\"main-navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\n          <ul className=\"navbar-nav ms-auto mb-2 mb-md-0\">\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/\">Home</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/blog\">Blog</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/publications\">Publications</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/news\">News</ExactNavLink>\n            </li>\n            <li className=\"nav-item\">\n              <ExactNavLink to=\"/contacts\">Contacts</ExactNavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Navbar\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Navbar from \"./navbar\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  var year = new Date().getFullYear();\n  return (\n    <div className=\"container-fluid p-0\">\n      <Navbar siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>\n        {children}\n      </main>\n      <footer className=\"footer mt-auto py-3\">\n        <div className=\"container\">\n          <span className=\"text-muted\"> &#169; Francesco Vigni {year} </span>\n          </div>\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\nexport const Seo = ({ title, description, pathname, children }) => {\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>ðŸ‘¤</text></svg>\" />\n      {children}\n    </>\n  )\n}","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n            title\n            description\n            author\n            keywords\n            image\n            siteUrl\n            twitterUsername\n            social{\n              twitter\n              github\n              linkedin\n              google\n            }\n          }\n      }\n    }\n  `)\n\n    return data.site.siteMetadata\n}","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Seo } from \"../components/seo\"\nimport { HiDocumentText, HiOutlineSearch } from 'react-icons/hi';\n\nconst News = ({ data }) => {\n  const news = data.allFile.nodes\n  console.log(news)\n\n\n  return (\n    <Layout>\n\n      <section className=\"py-5 text-center container own_container\">\n        <div className=\"row py-lg-5\">\n          <div className=\"col-lg-6 col-md-8 mx-auto\">\n            <h1 className=\"fw-light\">News</h1>\n            <p className=\"lead text-muted\"></p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <hr className=\"hr-text\" data-content=\"\" />\n          </div>\n        </div>\n        <div className=\"container own_sub_container\">\n\n          {news.map((node) => (\n            <div key={node.id} className=\"row p-2\">\n              <>\n                <div className=\"col-sm-2 own_sub_container\">\n                  <p className=\"own_date\">{node.childMarkdownRemark.frontmatter.date}</p>\n                </div>\n\n                <div className=\"col-md-10\">\n                  <div className=\"justify\" dangerouslySetInnerHTML={{ __html: node.childMarkdownRemark.html }} />\n                </div>\n              </>\n            </div>\n          ))}\n\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <hr className=\"hr-text\" data-content=\"\" />\n          </div>\n        </div>\n        <center>\n          <Link to=\"/\">Go back to the homepage</Link>\n        </center>\n\n      </section>\n    </Layout>\n  )\n}\n\nexport default News\n\nexport const Head = () => (\n  <Seo title=\"News\" />\n)\n\n\n//query data from the graphql server\nexport const query = graphql`\nquery NewsCV {\n  allFile(\n    filter: {sourceInstanceName: {eq: \"news\"}}\n    sort: {childrenMarkdownRemark: {frontmatter: {date: DESC}}}\n  )\n  {\n    nodes {\n      id\n      childMarkdownRemark {\n        frontmatter {\n          date(formatString: \"DD MMM, YYYY\")\n        }\n        html\n      }\n    }\n  },\n}\n`\n"],"names":["isActive","isCurrent","className","ExactNavLink","props","Link","getProps","Navbar","siteTitle","to","href","type","id","defaultProps","children","data","useStaticQuery","year","Date","getFullYear","site","siteMetadata","title","Seo","description","pathname","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","useSiteMetadata","seo","url","name","content","rel","news","allFile","nodes","console","log","map","node","key","childMarkdownRemark","frontmatter","date","dangerouslySetInnerHTML","__html","html","Head"],"sourceRoot":""}